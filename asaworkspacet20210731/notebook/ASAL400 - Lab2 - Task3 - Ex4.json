{
	"name": "ASAL400 - Lab2 - Task3 - Ex4",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool04",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "9d050215-8d29-4d95-928c-3b02c223af5d"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1"
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_spark",
				"display_name": "Synapse Spark"
			},
			"language_info": {
				"name": "scala"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/fbf033a1-3ebb-4140-bb7f-b406cf96c1b7/resourceGroups/data-engineering-synapse/providers/Microsoft.Synapse/workspaces/asaworkspacet20210731/bigDataPools/SparkPool04",
				"name": "SparkPool04",
				"type": "Spark",
				"endpoint": "https://asaworkspacet20210731.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool04",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.2",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"val df = spark.read.sqlanalytics(\"SQLPool01.wwi.UserTopProductPurchases\")\n",
					"df.head(10)\n",
					"\n",
					"df.createTempView(\"df\")\n",
					""
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"# Calling the DataFrame df created in Scala to Python\r\n",
					"df = sqlContext.table(\"df\")\r\n",
					"# *********************\r\n",
					"\r\n",
					"topPurchases = df.select(\r\n",
					"    \"UserId\", \"ProductId\",\r\n",
					"    \"ItemsPurchasedLast12Months\", \"IsTopProduct\",\r\n",
					"    \"IsPreferredProduct\")\r\n",
					"\r\n",
					"topPurchases.show(100)\r\n",
					""
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"from pyspark.sql.functions import *\r\n",
					"\r\n",
					"topPreferredProducts = (topPurchases\r\n",
					"    .filter( col(\"IsTopProduct\") == True)       \r\n",
					"    .orderBy( col(\"ItemsPurchasedLast12Months\").desc() ))\r\n",
					"\r\n",
					"topPreferredProducts.show(100)\r\n",
					""
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"CREATE OR REPLACE TEMPORARY VIEW top_5_products\r\n",
					"AS\r\n",
					"    select UserId, ProductId, ItemsPurchasedLast12Months\r\n",
					"    from (select *,\r\n",
					"                row_number() over (partition by UserId order by ItemsPurchasedLast12Months desc) as seqnum\r\n",
					"        from df\r\n",
					"        ) a\r\n",
					"    where seqnum <= 5 and IsTopProduct == true\r\n",
					"    order by a.UserId\r\n",
					""
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"top5Products = sqlContext.table(\"top_5_products\")\r\n",
					"\r\n",
					"top5Products.show(100)\r\n",
					""
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"print('before filter: ', topPreferredProducts.count(), ', after filter: ', top5Products.count())\r\n",
					""
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "python"
					}
				},
				"source": [
					"%%pyspark\r\n",
					"\r\n",
					"top5ProductsOverall = (top5Products.select(\"ProductId\",\"ItemsPurchasedLast12Months\")\r\n",
					"    .groupBy(\"ProductId\")\r\n",
					"    .agg( sum(\"ItemsPurchasedLast12Months\").alias(\"Total\") )\r\n",
					"    .orderBy( col(\"Total\").desc() )\r\n",
					"    .limit(5))\r\n",
					"\r\n",
					"top5ProductsOverall.show()\r\n",
					""
				],
				"execution_count": 8
			}
		]
	}
}