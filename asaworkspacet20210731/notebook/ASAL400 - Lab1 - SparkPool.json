{
	"name": "ASAL400 - Lab1 - SparkPool",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SparkPool04",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "837b3070-d61f-45ef-9536-3f41fac4b50f"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"e79f8713-f68c-4881-b008-d4416b3de824": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "822ea5b1-15e1-4a89-a224-db5332f27b3e",
										"1": "10",
										"2": "64",
										"3": 4,
										"4": "31.280000000000000000",
										"5": "125.120000000000000000",
										"6": "20101231",
										"7": "38.760000000000000000",
										"8": 7,
										"9": 55,
										"10": "2020"
									},
									{
										"0": "822ea5b1-15e1-4a89-a224-db5332f27b3e",
										"1": "10",
										"2": "64",
										"3": 3,
										"4": "31.280000000000000000",
										"5": "93.840000000000000000",
										"6": "20101231",
										"7": "29.070000000000000000",
										"8": 7,
										"9": 55,
										"10": "2020"
									},
									{
										"0": "822ea5b1-15e1-4a89-a224-db5332f27b3e",
										"1": "10",
										"2": "64",
										"3": 2,
										"4": "31.280000000000000000",
										"5": "62.560000000000000000",
										"6": "20101231",
										"7": "19.380000000000000000",
										"8": 7,
										"9": 55,
										"10": "2020"
									},
									{
										"0": "822ea5b1-15e1-4a89-a224-db5332f27b3e",
										"1": "10",
										"2": "3348",
										"3": 2,
										"4": "27.700000000000000000",
										"5": "55.400000000000000000",
										"6": "20101231",
										"7": "14.020000000000000000",
										"8": 7,
										"9": 55,
										"10": "2020"
									},
									{
										"0": "822ea5b1-15e1-4a89-a224-db5332f27b3e",
										"1": "10",
										"2": "1470",
										"3": 1,
										"4": "29.140000000000000000",
										"5": "29.140000000000000000",
										"6": "20101231",
										"7": "9.170000000000000000",
										"8": 7,
										"9": 55,
										"10": "2020"
									},
									{
										"0": "822ea5b1-15e1-4a89-a224-db5332f27b3e",
										"1": "10",
										"2": "1266",
										"3": 1,
										"4": "29.650000000000000000",
										"5": "29.650000000000000000",
										"6": "20101231",
										"7": "8.950000000000000000",
										"8": 7,
										"9": 55,
										"10": "2020"
									},
									{
										"0": "822ea5b1-15e1-4a89-a224-db5332f27b3e",
										"1": "10",
										"2": "48",
										"3": 3,
										"4": "35.550000000000000000",
										"5": "106.650000000000000000",
										"6": "20101231",
										"7": "29.250000000000000000",
										"8": 7,
										"9": 55,
										"10": "2020"
									},
									{
										"0": "822ea5b1-15e1-4a89-a224-db5332f27b3e",
										"1": "10",
										"2": "132",
										"3": 3,
										"4": "34.180000000000000000",
										"5": "102.540000000000000000",
										"6": "20101231",
										"7": "24.720000000000000000",
										"8": 7,
										"9": 55,
										"10": "2020"
									},
									{
										"0": "822ea5b1-15e1-4a89-a224-db5332f27b3e",
										"1": "10",
										"2": "69",
										"3": 3,
										"4": "31.060000000000000000",
										"5": "93.180000000000000000",
										"6": "20101231",
										"7": "30.210000000000000000",
										"8": 7,
										"9": 55,
										"10": "2020"
									},
									{
										"0": "822ea5b1-15e1-4a89-a224-db5332f27b3e",
										"1": "10",
										"2": "203",
										"3": 3,
										"4": "31.690000000000000000",
										"5": "95.070000000000000000",
										"6": "20101231",
										"7": "28.050000000000000000",
										"8": 7,
										"9": 55,
										"10": "2020"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "TransactionId",
										"type": "string"
									},
									{
										"key": "1",
										"name": "CustomerId",
										"type": "int"
									},
									{
										"key": "2",
										"name": "ProductId",
										"type": "smallint"
									},
									{
										"key": "3",
										"name": "Quantity",
										"type": "tinyint"
									},
									{
										"key": "4",
										"name": "Price",
										"type": "decimal"
									},
									{
										"key": "5",
										"name": "TotalAmount",
										"type": "decimal"
									},
									{
										"key": "6",
										"name": "TransactionDate",
										"type": "int"
									},
									{
										"key": "7",
										"name": "ProfitAmount",
										"type": "decimal"
									},
									{
										"key": "8",
										"name": "Hour",
										"type": "tinyint"
									},
									{
										"key": "9",
										"name": "Minute",
										"type": "tinyint"
									},
									{
										"key": "10",
										"name": "StoreId",
										"type": "smallint"
									}
								]
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"0"
									],
									"seriesFieldKeys": [
										"1"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/fbf033a1-3ebb-4140-bb7f-b406cf96c1b7/resourceGroups/data-engineering-synapse/providers/Microsoft.Synapse/workspaces/asaworkspacet20210731/bigDataPools/SparkPool04",
				"name": "SparkPool04",
				"type": "Spark",
				"endpoint": "https://asaworkspacet20210731.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool04",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "3.2",
				"nodeCount": 10,
				"cores": 4,
				"memory": 28,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"microsoft": {
						"language": "python"
					},
					"collapsed": false
				},
				"source": [
					"%%pyspark\r\n",
					"df = spark.read.load('abfss://wwi-02@asadatalaket20210731.dfs.core.windows.net/sale-small/Year=2010/Quarter=Q4/Month=12/Day=20101231/sale-small-20101231-snappy.parquet', format='parquet')\r\n",
					"display(df.limit(10))\r\n",
					""
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df.printSchema()"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"from pyspark.sql.types import *\r\n",
					"from pyspark.sql.functions import *\r\n",
					"\r\n",
					"profitByDateProduct = (df.groupBy(\"TransactionDate\",\"ProductId\")\r\n",
					"    .agg(\r\n",
					"        sum(\"ProfitAmount\").alias(\"(sum)ProfitAmount\"),\r\n",
					"        round(avg(\"Quantity\"), 4).alias(\"(avg)Quantity\"),\r\n",
					"        sum(\"Quantity\").alias(\"(sum)Quantity\"))\r\n",
					"    .orderBy(\"TransactionDate\"))\r\n",
					"profitByDateProduct.show(100)"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"df = (spark.read \\\r\n",
					"        .option(\"inferSchema\", \"true\") \\\r\n",
					"        .json(\"abfss://wwi-02@asadatalaket20210731.dfs.core.windows.net/online-user-profiles-02/*.json\", multiLine=True)\r\n",
					"    )\r\n",
					"\r\n",
					"df.printSchema()"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# create a view called user_profiles\r\n",
					"df.createOrReplaceTempView(\"user_profiles\")"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"microsoft": {
						"language": "sparksql"
					},
					"collapsed": false
				},
				"source": [
					"%%sql\r\n",
					"\r\n",
					"SELECT * FROM user_profiles LIMIT 10"
				],
				"execution_count": 6
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"from pyspark.sql.functions import udf, explode\r\n",
					"\r\n",
					"flat=df.select('visitorId',explode('topProductPurchases').alias('topProductPurchases_flat'))\r\n",
					"flat.show(100)"
				],
				"execution_count": 7
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"topPurchases = (flat.select('visitorId','topProductPurchases_flat.productId','topProductPurchases_flat.itemsPurchasedLast12Months')\r\n",
					"    .orderBy('visitorId'))\r\n",
					"\r\n",
					"topPurchases.show(100)"
				],
				"execution_count": 8
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Let's order by the number of items purchased in the last 12 months\r\n",
					"sortedTopPurchases = topPurchases.orderBy(\"itemsPurchasedLast12Months\")\r\n",
					"\r\n",
					"sortedTopPurchases.show(100)"
				],
				"execution_count": 9
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"sortedTopPurchases = (topPurchases\r\n",
					"    .orderBy( col(\"itemsPurchasedLast12Months\").desc() ))\r\n",
					"\r\n",
					"sortedTopPurchases.show(100)"
				],
				"execution_count": 19
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"groupedTopPurchases = (sortedTopPurchases.select(\"visitorId\")\r\n",
					"    .groupBy(\"visitorId\")\r\n",
					"    .agg(count(\"*\").alias(\"total\"))\r\n",
					"    .orderBy(\"visitorId\") )\r\n",
					"\r\n",
					"groupedTopPurchases.show(100)"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				]
			}
		]
	}
}